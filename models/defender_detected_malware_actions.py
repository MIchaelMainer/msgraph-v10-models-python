# -*- coding: utf-8 -*- 
'''
# Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
# 
#  This file was generated and any changes will be overwritten.
'''

from __future__ import unicode_literals
from ..model.defender_threat_action import DefenderThreatAction
from ..one_drive_object_base import OneDriveObjectBase


class DefenderDetectedMalwareActions(OneDriveObjectBase):

    def __init__(self, prop_dict={}):
        self._prop_dict = prop_dict

    @property
    def low_severity(self):
        """
        Gets and sets the lowSeverity
        
        Returns: 
            :class:`DefenderThreatAction<onedrivesdk.model.defender_threat_action.DefenderThreatAction>`:
                The lowSeverity
        """
        if "lowSeverity" in self._prop_dict:
            if isinstance(self._prop_dict["lowSeverity"], OneDriveObjectBase):
                return self._prop_dict["lowSeverity"]
            else :
                self._prop_dict["lowSeverity"] = DefenderThreatAction(self._prop_dict["lowSeverity"])
                return self._prop_dict["lowSeverity"]

        return None

    @low_severity.setter
    def low_severity(self, val):
        self._prop_dict["lowSeverity"] = val
    @property
    def moderate_severity(self):
        """
        Gets and sets the moderateSeverity
        
        Returns: 
            :class:`DefenderThreatAction<onedrivesdk.model.defender_threat_action.DefenderThreatAction>`:
                The moderateSeverity
        """
        if "moderateSeverity" in self._prop_dict:
            if isinstance(self._prop_dict["moderateSeverity"], OneDriveObjectBase):
                return self._prop_dict["moderateSeverity"]
            else :
                self._prop_dict["moderateSeverity"] = DefenderThreatAction(self._prop_dict["moderateSeverity"])
                return self._prop_dict["moderateSeverity"]

        return None

    @moderate_severity.setter
    def moderate_severity(self, val):
        self._prop_dict["moderateSeverity"] = val
    @property
    def high_severity(self):
        """
        Gets and sets the highSeverity
        
        Returns: 
            :class:`DefenderThreatAction<onedrivesdk.model.defender_threat_action.DefenderThreatAction>`:
                The highSeverity
        """
        if "highSeverity" in self._prop_dict:
            if isinstance(self._prop_dict["highSeverity"], OneDriveObjectBase):
                return self._prop_dict["highSeverity"]
            else :
                self._prop_dict["highSeverity"] = DefenderThreatAction(self._prop_dict["highSeverity"])
                return self._prop_dict["highSeverity"]

        return None

    @high_severity.setter
    def high_severity(self, val):
        self._prop_dict["highSeverity"] = val
    @property
    def severe_severity(self):
        """
        Gets and sets the severeSeverity
        
        Returns: 
            :class:`DefenderThreatAction<onedrivesdk.model.defender_threat_action.DefenderThreatAction>`:
                The severeSeverity
        """
        if "severeSeverity" in self._prop_dict:
            if isinstance(self._prop_dict["severeSeverity"], OneDriveObjectBase):
                return self._prop_dict["severeSeverity"]
            else :
                self._prop_dict["severeSeverity"] = DefenderThreatAction(self._prop_dict["severeSeverity"])
                return self._prop_dict["severeSeverity"]

        return None

    @severe_severity.setter
    def severe_severity(self, val):
        self._prop_dict["severeSeverity"] = val
